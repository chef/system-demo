{
    "name":"batch_2_groups_100_percent",
    "description": "An integration test: demonstrating two groups, each with one node, requiring 100% success to continue",
    "immediate": true,
    "exceptionRules":[],
    "target": {
            "executionType": "sequential",
            "groups":[
                {
                    "timeoutSeconds": 240,
                    "batchSize": {
                        "type": "number",
                        "value": 1
                    },
                    "distributionMethod": "batching",
                    "successCriteria": [
                        { 
                            "numRuns": { "type": "percent", "value": 100 }, 
                            "status": "success" 
                        }
                    ],
                    "nodeListType":"nodes",
                    "nodeIdentifiers":[
                        "--NODE1--"
                    ] 
                },
                {
                    "timeoutSeconds": 120,
                    "batchSize": {
                        "type": "number",
                        "value": 1
                    },
                    "distributionMethod":"batching",
                    "successCriteria": [{ "numRuns": { "type": "percent", "value": 100 }, "status": "success" }],
                    "nodeListType":"nodes",
                    "nodeIdentifiers":[
                        "--NODE2--"
                    ] 
                }
            ]
        },
    "actions": {
            "accessMode": "agent",
            "steps": 
            [
                {
                    "stepNumber": 1,
                    "interpreter": {
                        "name": "chef-platform/shell-interpreter"
                    },
                    "command": [
                        "sleep 10"
                    ],
                    "inputs": {},
                    "expectedInputs": { },
                    "stepOutputFieldRules": {},
                    "retryCount": 2,
                    "failureBehavior": {
                        "action": "retryThenFail",
                        "retryBackoffStrategy": {
                            "name": "none",
                            "delaySeconds": 0,
                            "arguments": [1,3,5]
                        }
                    },
                    "limits": {},
                    "conditions": []
                }
            ]
        },
    "timeoutSeconds": 300
}