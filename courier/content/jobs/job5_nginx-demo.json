{
  "name": "nginx-install",
  "description": "A simple demonstration that shows a multi-step job that declares outputs and evaluates inputs",
  "immediate": true,
  "exceptionRules": [],
  "target": {
    "executionType": "sequential",
    "groups": [
      {
        "timeoutSeconds": 160,
        "batchSize": {
          "type": "number",
          "value": 1
        },
        "distributionMethod":"rolling",
        "nodeListType":"nodes",
        "nodeIdentifiers": [
          "8e808f12-d8de-42d6-ad4a-06614594ee9a"
          ]
      }
    ]
  },
  "timeoutSeconds": 300,
  "actions": {
    "accessMode": "agent",
    "steps": [
      {
        "command": [
          "which nginx && echo true || echo false"
          ],
          "outputFieldRules": {
            "NGINX_FOUND": {
              "name": "NGINX_FOUND",
              "source": "stdout",
              "sourceType": "output",
              "extractMethod": "content",
              "expression": "",
              "required": true,
              "sensitive": false
            }
          },
          "retryCount": 2,
          "failureBehavior": {
            "action": "retryThenFail",
            "retryBackoffStrategy": {
              "name": "linear",
              "delaySeconds": 1,
              "arguments": []
            }
          },
          "limits": {}
      },
      {
        "expectedInputs": {
          "NGINX_FOUND": {
            "type": "string",
            "sensitive": false,
            "required": true,
            "default": ""
          }
        },
        "conditions": [
          {
            "inputName": "NGINX_FOUND",
            "operator": "eq",
            "value": "false"
          }
        ],
        "command": [
          "yum install nginx -y",
          "systemctl enable nginx",
          "systemctl start nginx"
        ],
        "retryCount": 2,
        "failureBehavior": {
          "action": "retryThenFail",
          "retryBackoffStrategy": {
            "name": "linear",
            "delaySeconds": 1,
            "arguments": []
          }
        },
        "limits": {}
      },
      {
        "command": [
          "curl -s http://localhost:80 | grep -q 'hello world!' && echo true || echo false"
          ],
          "outputFieldRules": {
            "EXPECTED_PAGE_FOUND": {
              "name": "EXPECTED_PAGE_FOUND",
              "source": "stdout",
              "sourceType": "output",
              "extractMethod": "content",
              "expression": "",
              "required": true,
              "sensitive": false
            }
          },
          "retryCount": 2,
          "failureBehavior": {
            "action": "retryThenFail",
            "retryBackoffStrategy": {
              "name": "linear",
              "delaySeconds": 1,
              "arguments": []
            }
          },
          "limits": {}
      },
      {
        "conditions": [
          {
            "inputName": "EXPECTED_PAGE_FOUND",
            "operator": "eq",
            "value": "false"
          }
        ],
        "command": [
          "echo '<html><body><h1>hello world</h1></body></html>' | sudo tee /usr/share/nginx/html/index.html > /dev/null"
          ],
          "retryCount": 2,
          "failureBehavior": {
            "action": "retryThenFail",
            "retryBackoffStrategy": {
              "name": "linear",
              "delaySeconds": 1,
              "arguments": []
            }
          },
          "limits": {}
      },
      {
        "command": [
          "curl -s http://localhost:80 | grep -q 'hello world!'"
          ],
          "retryCount": 2,
          "failureBehavior": {
            "action": "retryThenFail",
            "retryBackoffStrategy": {
              "name": "linear",
              "delaySeconds": 1,
              "arguments": []
            }
          },
          "limits": {}
      }
    ]
  }
}

