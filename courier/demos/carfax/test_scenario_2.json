{
    "name":"test_scenario_2",
    "description": "scan and remediate",
    "immediate": true,
    "exceptionRules":[],
    "target":{
            "executionType": "sequential",
            "groups":[{
                "timeoutSeconds": 160,
                "batchSize": {
                    "type": "number",
                    "value": 3
                },
                "distributionMethod":"batching",
                "successCriteria": [{ "numRuns": { "type": "percent", "value": 100 }, "status": "success" }],
                "nodeListType":"nodes",
                "nodeIdentifiers":["7e1c8170-a26b-4ab9-b836-0720fc70a661","c7301b0f-2806-41b7-810d-13d3b280c862", "9e2bdb0d-de84-49c8-bb37-9f4828cb444c"] 
                },
                {
                "timeoutSeconds": 160,
                "batchSize": {
                    "type": "number",
                    "value": 3
                },
                "distributionMethod":"batching",
                "successCriteria": [{ "numRuns": { "type": "percent", "value": 100 }, "status": "success" }],
                "nodeListType":"nodes",
                "nodeIdentifiers":["9e1c8170-a26b-4ab9-b836-0720fc70a661","c9301b0f-2806-41b7-810d-13d3b280c862", "7e9bdb0d-de84-49c8-bb37-9f4828cb444c"] 
                },
                {
                "timeoutSeconds": 160,
                "batchSize": {
                    "type": "number",
                    "value": 3
                },
                "distributionMethod":"batching",
                "successCriteria": [{ "numRuns": { "type": "percent", "value": 100 }, "status": "success" }],
                "nodeListType":"nodes",
                "nodeIdentifiers":["9e1c8170-a26b-4ab9-b836-0720fc70a661","c9301b0f-2806-41b7-810d-13d3b280c862", "7e9bdb0d-de84-49c8-bb37-9f4828cb444c"] 
                }
            ]
        },
    "actions":
        {
            "accessMode": "agent",
            "steps": 
            [{
              "stepNumber": 1,
                "interpreter": {
                    "name":"chef-inspec-client",
                    "min_version": "3.0",
                    "max_version": "5.0"
                },
                "command": ["RHEL.policy"],
                "inputs": {"foo": "baz"},
                "expectedInputs": {
                    "foo": {
                    "default": "bar",
                    "required": false,
                    "sensitive": true
                    }
                },
                "stepOutputFieldRules": 
                {"file" : {
                    "name": "file",
                    "sourceType": "output",
                    "source": "output",
                    "extractMethod": "stringormap",
                    "expression": "optional",
                    "required": true,
                    "sensitive": false
                }},
                "retryCount": 2,
                "failureBehavior": {
                    "action": "retryThenFail",
                    "retryBackoffStrategy": {
                        "name": "none",
                        "delaySeconds": 0,
                        "arguments": [1,3,5]
                    }
                },
                "limits": {},
                "conditions": [{
                    "inputName": "input",
                    "negate": false,
                    "operator": "matches",
                    "value": "expectedValue"
                }]
            },
            {
              "stepNumber": 2,
                "interpreter": {
                    "name":"chef-inspec-client",
                    "min_version": "3.0",
                    "max_version": "5.0"
                },
                "command": ["RHEL.policy"],
                "inputs": {"foo": "baz"},
                "expectedInputs": {
                    "foo": {
                    "default": "bar",
                    "required": false,
                    "sensitive": true
                    }
                },
                "stepOutputFieldRules":{ 
                "file": {
                    "name": "file",
                    "sourceType": "output",
                    "source": "output",
                    "extractMethod": "stringormap",
                    "expression": "optional",
                    "required": true,
                    "sensitive": false
                }},
                "retryCount": 2,
                "failureBehavior": {
                    "action": "retryThenFail",
                    "retryBackoffStrategy": {
                        "name": "none",
                        "delaySeconds": 0,
                        "arguments": [1,3,5]
                    }
                },
                "limits": {},
                "conditions": [{
                    "inputName": "input",
                    "negate": false,
                    "operator": "matches",
                    "value": "expectedValue"
                }]
            }]
        },
    "timeoutSeconds": 300
}
