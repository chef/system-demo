{
    "name":"job4_3_groups_parallel",
    "description": "scan and remediate",
    "immediate": true,
    "exceptionRules":[],
    "target":{
            "executionType": "parallel",
            "groups":[{
                "timeoutSeconds": 160,
                "batchSize": {
                    "type": "number",
                    "value": 3
                },
                "distributionMethod":"batching",
                "successCriteria": [{ "numRuns": { "type": "percent", "value": 100 }, "status": "success" }],
                "nodeListType":"nodes",
                "nodeIdentifiers":["7e1c8170-a26b-4ab9-b836-0720fc70a661","c7301b0f-2806-41b7-810d-13d3b280c862", "9e2bdb0d-de84-49c8-bb37-9f4828cb444c"] 
                },
                {
                "timeoutSeconds": 160,
                "batchSize": {
                    "type": "number",
                    "value": 3
                },
                "distributionMethod":"batching",
                "successCriteria": [{ "numRuns": { "type": "percent", "value": 100 }, "status": "success" }],
                "nodeListType":"nodes",
                "nodeIdentifiers":["9e1c8170-a26b-4ab9-b836-0720fc70a661","c9301b0f-2806-41b7-810d-13d3b280c862", "7e9bdb0d-de84-49c8-bb37-9f4828cb444c"] 
                },
                {
                "timeoutSeconds": 160,
                "batchSize": {
                    "type": "number",
                    "value": 3
                },
                "distributionMethod":"batching",
                "successCriteria": [{ "numRuns": { "type": "percent", "value": 100 }, "status": "success" }],
                "nodeListType":"nodes",
                "nodeIdentifiers":["9e1c8170-a26b-4ab9-b836-0720fc70a661","c9301b0f-2806-41b7-810d-13d3b280c862", "7e9bdb0d-de84-49c8-bb37-9f4828cb444c"] 
                }
            ]
        },
    "actions": {
            "accessMode": "agent",
            "steps": 
            [
                {
                    "stepNumber": 1,
                    "interpreter": {
                        "name": "chef/courier-interpreter/os/shell"
                    },
                    "command": [
                        "[[ \"$HOSTNAME\" != \"ip-192-168-\"*\"-20\"* ]] || (exit 1)"
                    ],
                    "inputs": {},
                    "expectedInputs": { },
                    "stepOutputFieldRules": {},
                    "retryCount": 2,
                    "failureBehavior": {
                        "action": "retryThenFail",
                        "retryBackoffStrategy": {
                            "name": "none",
                            "delaySeconds": 0,
                            "arguments": [1,3,5]
                        }
                    },
                    "limits": {},
                    "conditions": []
                },
                {
                    "stepNumber": 1,
                    "interpreter": {
                        "name": "chef/courier-interpreter/os/shell"
                    },
                    "command": [
                        "sleep 10"
                    ],
                    "inputs": {},
                    "expectedInputs": { },
                    "stepOutputFieldRules": {},
                    "retryCount": 2,
                    "failureBehavior": {
                        "action": "retryThenFail",
                        "retryBackoffStrategy": {
                            "name": "none",
                            "delaySeconds": 0,
                            "arguments": [1,3,5]
                        }
                    },
                    "limits": {},
                    "conditions": []
                },
                {
                    "stepNumber": 1,
                    "interpreter": {
                        "name": "chef/courier-interpreter/os/shell"
                    },
                    "command": [
                        "[[ \"$HOSTNAME\" != \"ip-192-168-\"*\"-10\"* ]] || (exit 1)"
                    ],
                    "inputs": {},
                    "expectedInputs": { },
                    "stepOutputFieldRules": {},
                    "retryCount": 2,
                    "failureBehavior": {
                        "action": "retryThenFail",
                        "retryBackoffStrategy": {
                            "name": "none",
                            "delaySeconds": 0,
                            "arguments": [1,3,5]
                        }
                    },
                    "limits": {},
                    "conditions": []
                }
            ]
        },
    "timeoutSeconds": 300
}
